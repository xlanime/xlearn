<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xlearn.dao.UserGroupMapper">
  <resultMap id="BaseResultMap" type="com.xlearn.pojo.UserGroup">
    <constructor>
      <idArg column="mem_group_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="group_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="user_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    mem_group_id, group_id, user_id, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from xlearn_user_group
    where mem_group_id = #{memGroupId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from xlearn_user_group
    where mem_group_id = #{memGroupId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xlearn.pojo.UserGroup">
    insert into xlearn_user_group (mem_group_id, group_id, user_id, 
      create_time, update_time)
    values (#{memGroupId,jdbcType=INTEGER}, #{groupId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.xlearn.pojo.UserGroup">
    insert into xlearn_user_group
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="memGroupId != null">
        mem_group_id,
      </if>
      <if test="groupId != null">
        group_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="memGroupId != null">
        #{memGroupId,jdbcType=INTEGER},
      </if>
      <if test="groupId != null">
        #{groupId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xlearn.pojo.UserGroup">
    update xlearn_user_group
    <set>
      <if test="groupId != null">
        group_id = #{groupId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where mem_group_id = #{memGroupId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xlearn.pojo.UserGroup">
    update xlearn_user_group
    set group_id = #{groupId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where mem_group_id = #{memGroupId,jdbcType=INTEGER}
  </update>

</mapper>