<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xlearn.dao.ClockMapper">
  <resultMap id="BaseResultMap" type="com.xlearn.pojo.Clock">
    <constructor>
      <idArg column="clock_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="begin_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="end_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="user_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="points" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    clock_id, begin_time, end_time, user_id, points, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from xlearn_clock
    where clock_id = #{clockId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from xlearn_clock
    where clock_id = #{clockId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xlearn.pojo.Clock" useGeneratedKeys="true" keyProperty="clockId">
    insert into xlearn_clock (clock_id, begin_time, end_time, 
      user_id, points, create_time,
      update_time)
    values (#{clockId,jdbcType=INTEGER}, #{beginTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, 
      #{userId,jdbcType=INTEGER}, #{points,jdbcType=INTEGER}, now(),
      now())
  </insert>
  <insert id="insertSelective" parameterType="com.xlearn.pojo.Clock">
    insert into xlearn_clock
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="clockId != null">
        clock_id,
      </if>
      <if test="beginTime != null">
        begin_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="points != null">
        points,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="clockId != null">
        #{clockId,jdbcType=INTEGER},
      </if>
      <if test="beginTime != null">
        #{beginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="points != null">
        #{points,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xlearn.pojo.Clock">
    update xlearn_clock
    <set>
      <if test="beginTime != null">
        begin_time = #{beginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="points != null">
        points = #{points,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where clock_id = #{clockId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xlearn.pojo.Clock">
    update xlearn_clock
    set begin_time = #{beginTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=INTEGER},
      points = #{points,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where clock_id = #{clockId,jdbcType=INTEGER}
  </update>

  <select id="getClockInfoByUserId" resultMap="BaseResultMap" parameterType="integer">
    SELECT
    <include refid="Base_Column_List"/>
    FROM xlearn_clock
    WHERE user_id = #{userId}
  </select>
</mapper>