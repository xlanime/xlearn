<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xlearn.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.xlearn.pojo.User">
    <constructor>
      <idArg column="user_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="user_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="password" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="nick_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="sex" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="user_head" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="user_points" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="regist_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="last_login" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="user_role" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    user_id, user_name, password, nick_name, sex,user_head, user_points, regist_time, last_login,
    user_role, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from xlearn_user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from xlearn_user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xlearn.pojo.User">
    insert into xlearn_user (user_id, user_name, password, 
      nick_name, sex,user_head, user_points,
      regist_time, last_login, user_role, 
      create_time, update_time)
    values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{nickName,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, #{userHead,jdbcType=VARCHAR}, #{userPoints,jdbcType=INTEGER},
      now(), #{lastLogin,jdbcType=TIMESTAMP}, #{userRole,jdbcType=INTEGER},
      now(), now())
  </insert>
  <insert id="insertSelective" parameterType="com.xlearn.pojo.User">
    insert into xlearn_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="userPoints != null">
        user_points,
      </if>
      <if test="registTime != null">
        regist_time,
      </if>
      <if test="lastLogin != null">
        last_login,
      </if>
      <if test="userRole != null">
        user_role,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="userPoints != null">
        #{userPoints,jdbcType=INTEGER},
      </if>
      <if test="registTime != null">
        #{registTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLogin != null">
        #{lastLogin,jdbcType=TIMESTAMP},
      </if>
      <if test="userRole != null">
        #{userRole,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xlearn.pojo.User">
    update xlearn_user
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="userPoints != null">
        user_points = #{userPoints,jdbcType=INTEGER},
      </if>
      <if test="registTime != null">
        regist_time = #{registTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLogin != null">
        last_login = #{lastLogin,jdbcType=TIMESTAMP},
      </if>
      <if test="userRole != null">
        user_role = #{userRole,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xlearn.pojo.User">
    update xlearn_user
    set user_name = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      user_points = #{userPoints,jdbcType=INTEGER},
      regist_time = #{registTime,jdbcType=TIMESTAMP},
      last_login = #{lastLogin,jdbcType=TIMESTAMP},
      user_role = #{userRole,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <select id="selectByUsername" parameterType="string" resultType="java.lang.Integer">
    SELECT COUNT(*) from xlearn_user
    WHERE user_name = #{userName}
  </select>

  <select id="selectByUsernamePassword" parameterType="map" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    FROM xlearn_user
    where user_name = #{username}
    and password = #{password}
  </select>

  <select id="getUserPointsByUserId" parameterType="integer" resultType="integer">
    SELECT
    user_points
    FROM xlearn_user
    where user_id = #{userId}
  </select>

  <select id="getRankInfo" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    from xlearn_user
    order by user_points DESC
  </select>
</mapper>